generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Regra {
  ADMIN
  TECNICO
  USUARIO
}

enum ChamadoStatus {
  ABERTO
  EM_ATENDIMENTO
  ENCERRADO
  CANCELADO
}

enum Setor {
  ADMINISTRACAO
  ALMOXARIFADO
  CALL_CENTER
  COMERCIAL
  DEPARTAMENTO_PESSOAL
  FINANCEIRO
  JURIDICO
  LOGISTICA
  MARKETING
  QUALIDADE
  RECURSOS_HUMANOS
  TECNOLOGIA_INFORMACAO
}

model Usuario {
  id                   String        @id @default(cuid())
  nome                 String
  sobrenome            String
  email                String        @unique
  password             String
  regra                Regra
  setor                Setor?       // Só para usuários
  telefone             String?
  ramal                String?
  avatarUrl            String?
  geradoEm             DateTime      @default(now())
  atualizadoEm         DateTime      @updatedAt
  ativo                Boolean       @default(true) // Para desativar técnicos/usuários
  refreshToken         String?       // Campo iniciará null quando o usuário fizer logout

  // Relacionamentos
  chamadoOS              Chamado[]     @relation("UsuarioChamado")
  tecnicoChamados        Chamado[]     @relation("TecnicoResponsavel")
  tecnicoDisponibilidade Expediente[]
}

model Expediente {
  id            String   @id @default(cuid())
  usuario       Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId     String
  entrada       String   // Ex: '08:00'
  saida         String   // Ex: '09:00'
}

model Servico {
  id             String             @id @default(cuid())
  nome           String             @unique
  descricao      String?
  ativo          Boolean            @default(true) // Soft delete
  geradoEm       DateTime           @default(now())
  atualizadoEm   DateTime           @updatedAt
  chamados    OrdemDeServico[]
}

model Chamado {
  id                    String            @id @default(cuid())
  OS                    String            @unique   // Ex: INC0001, INC0002...
  descricao             String
  descricaoEncerramento String?
  status                ChamadoStatus     @default(ABERTO)
  geradoEm              DateTime          @default(now())
  atualizadoEm          DateTime          @updatedAt
  encerradoEm           DateTime?

  usuario               Usuario            @relation("UsuarioChamado", fields: [usuarioId], references: [id])
  usuarioId             String

  tecnico               Usuario?           @relation("TecnicoResponsavel", fields: [tecnicoId], references: [id])
  tecnicoId             String?

  servicos              OrdemDeServico[]
}

model OrdemDeServico {
  id         String   @id @default(cuid())
  chamado    Chamado  @relation(fields: [chamadoId], references: [id])
  chamadoId  String
  servico    Servico  @relation(fields: [servicoId], references: [id])
  servicoId  String
}
